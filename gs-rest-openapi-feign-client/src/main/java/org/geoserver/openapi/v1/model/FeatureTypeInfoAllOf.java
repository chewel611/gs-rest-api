/*
 * GeoServer Feature Types
 * A feature type is a vector based spatial resource or data set that originates from a data store. In some cases, such as with a shapefile, a feature type has a one-to-one relationship with its data store. In other cases, such as PostGIS, the relationship of feature type to data store is many-to-one, feature types corresponding to a table in the database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * FeatureTypeInfoAllOf
 */
@JsonPropertyOrder({
  FeatureTypeInfoAllOf.JSON_PROPERTY_STORE,
  FeatureTypeInfoAllOf.JSON_PROPERTY_CQL_FILTER,
  FeatureTypeInfoAllOf.JSON_PROPERTY_MAX_FEATURES,
  FeatureTypeInfoAllOf.JSON_PROPERTY_NUM_DECIMALS,
  FeatureTypeInfoAllOf.JSON_PROPERTY_PAD_WITH_ZEROS,
  FeatureTypeInfoAllOf.JSON_PROPERTY_FORCED_DECIMAL,
  FeatureTypeInfoAllOf.JSON_PROPERTY_RESPONSE_S_R_S,
  FeatureTypeInfoAllOf.JSON_PROPERTY_OVERRIDING_SERVICE_S_R_S,
  FeatureTypeInfoAllOf.JSON_PROPERTY_SKIP_NUMBER_MATCHED,
  FeatureTypeInfoAllOf.JSON_PROPERTY_CIRCULAR_ARC_PRESENT,
  FeatureTypeInfoAllOf.JSON_PROPERTY_ENCODE_MEASURES,
  FeatureTypeInfoAllOf.JSON_PROPERTY_LINEARIZATION_TOLERANCE,
  FeatureTypeInfoAllOf.JSON_PROPERTY_ATTRIBUTES
})

public class FeatureTypeInfoAllOf {
  public static final String JSON_PROPERTY_STORE = "store";
  private org.geoserver.openapi.model.catalog.DataStoreInfo store;

  public static final String JSON_PROPERTY_CQL_FILTER = "cqlFilter";
  private String cqlFilter;

  public static final String JSON_PROPERTY_MAX_FEATURES = "maxFeatures";
  private Integer maxFeatures;

  public static final String JSON_PROPERTY_NUM_DECIMALS = "numDecimals";
  private Integer numDecimals;

  public static final String JSON_PROPERTY_PAD_WITH_ZEROS = "padWithZeros";
  private Boolean padWithZeros;

  public static final String JSON_PROPERTY_FORCED_DECIMAL = "forcedDecimal";
  private Boolean forcedDecimal;

  public static final String JSON_PROPERTY_RESPONSE_S_R_S = "responseSRS";
  private List<String> responseSRS = null;

  public static final String JSON_PROPERTY_OVERRIDING_SERVICE_S_R_S = "overridingServiceSRS";
  private Boolean overridingServiceSRS;

  public static final String JSON_PROPERTY_SKIP_NUMBER_MATCHED = "skipNumberMatched";
  private Boolean skipNumberMatched;

  public static final String JSON_PROPERTY_CIRCULAR_ARC_PRESENT = "circularArcPresent";
  private Boolean circularArcPresent;

  public static final String JSON_PROPERTY_ENCODE_MEASURES = "encodeMeasures";
  private Boolean encodeMeasures;

  public static final String JSON_PROPERTY_LINEARIZATION_TOLERANCE = "linearizationTolerance";
  private BigDecimal linearizationTolerance;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private List<org.geoserver.openapi.model.catalog.AttributeTypeInfo> attributes = null;


  public FeatureTypeInfoAllOf store(org.geoserver.openapi.model.catalog.DataStoreInfo store) {
    
    this.store = store;
    return this;
  }

   /**
   * Get store
   * @return store
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.geoserver.openapi.model.catalog.DataStoreInfo getStore() {
    return store;
  }


  public void setStore(org.geoserver.openapi.model.catalog.DataStoreInfo store) {
    this.store = store;
  }


  public FeatureTypeInfoAllOf cqlFilter(String cqlFilter) {
    
    this.cqlFilter = cqlFilter;
    return this;
  }

   /**
   * The ECQL string used as default feature type filter
   * @return cqlFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ECQL string used as default feature type filter")
  @JsonProperty(JSON_PROPERTY_CQL_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCqlFilter() {
    return cqlFilter;
  }


  public void setCqlFilter(String cqlFilter) {
    this.cqlFilter = cqlFilter;
  }


  public FeatureTypeInfoAllOf maxFeatures(Integer maxFeatures) {
    
    this.maxFeatures = maxFeatures;
    return this;
  }

   /**
   * A cap on the number of features that a query against this type can return.
   * @return maxFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A cap on the number of features that a query against this type can return.")
  @JsonProperty(JSON_PROPERTY_MAX_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxFeatures() {
    return maxFeatures;
  }


  public void setMaxFeatures(Integer maxFeatures) {
    this.maxFeatures = maxFeatures;
  }


  public FeatureTypeInfoAllOf numDecimals(Integer numDecimals) {
    
    this.numDecimals = numDecimals;
    return this;
  }

   /**
   * The number of decimal places to use when encoding floating point numbers from data of this feature type.
   * @return numDecimals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of decimal places to use when encoding floating point numbers from data of this feature type.")
  @JsonProperty(JSON_PROPERTY_NUM_DECIMALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumDecimals() {
    return numDecimals;
  }


  public void setNumDecimals(Integer numDecimals) {
    this.numDecimals = numDecimals;
  }


  public FeatureTypeInfoAllOf padWithZeros(Boolean padWithZeros) {
    
    this.padWithZeros = padWithZeros;
    return this;
  }

   /**
   * Get padWithZeros
   * @return padWithZeros
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAD_WITH_ZEROS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPadWithZeros() {
    return padWithZeros;
  }


  public void setPadWithZeros(Boolean padWithZeros) {
    this.padWithZeros = padWithZeros;
  }


  public FeatureTypeInfoAllOf forcedDecimal(Boolean forcedDecimal) {
    
    this.forcedDecimal = forcedDecimal;
    return this;
  }

   /**
   * Get forcedDecimal
   * @return forcedDecimal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FORCED_DECIMAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getForcedDecimal() {
    return forcedDecimal;
  }


  public void setForcedDecimal(Boolean forcedDecimal) {
    this.forcedDecimal = forcedDecimal;
  }


  public FeatureTypeInfoAllOf responseSRS(List<String> responseSRS) {
    
    this.responseSRS = responseSRS;
    return this;
  }

  public FeatureTypeInfoAllOf addResponseSRSItem(String responseSRSItem) {
    if (this.responseSRS == null) {
      this.responseSRS = new ArrayList<>();
    }
    this.responseSRS.add(responseSRSItem);
    return this;
  }

   /**
   * The srs codes that the WFS service will advertise in the capabilities document for this feature type (overriding the global WFS settings).
   * @return responseSRS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The srs codes that the WFS service will advertise in the capabilities document for this feature type (overriding the global WFS settings).")
  @JsonProperty(JSON_PROPERTY_RESPONSE_S_R_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getResponseSRS() {
    return responseSRS;
  }


  public void setResponseSRS(List<String> responseSRS) {
    this.responseSRS = responseSRS;
  }


  public FeatureTypeInfoAllOf overridingServiceSRS(Boolean overridingServiceSRS) {
    
    this.overridingServiceSRS = overridingServiceSRS;
    return this;
  }

   /**
   * True if this feature type info is overriding the WFS global SRS list
   * @return overridingServiceSRS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this feature type info is overriding the WFS global SRS list")
  @JsonProperty(JSON_PROPERTY_OVERRIDING_SERVICE_S_R_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOverridingServiceSRS() {
    return overridingServiceSRS;
  }


  public void setOverridingServiceSRS(Boolean overridingServiceSRS) {
    this.overridingServiceSRS = overridingServiceSRS;
  }


  public FeatureTypeInfoAllOf skipNumberMatched(Boolean skipNumberMatched) {
    
    this.skipNumberMatched = skipNumberMatched;
    return this;
  }

   /**
   * True if this feature type info is overriding the counting of numberMatched.
   * @return skipNumberMatched
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this feature type info is overriding the counting of numberMatched.")
  @JsonProperty(JSON_PROPERTY_SKIP_NUMBER_MATCHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipNumberMatched() {
    return skipNumberMatched;
  }


  public void setSkipNumberMatched(Boolean skipNumberMatched) {
    this.skipNumberMatched = skipNumberMatched;
  }


  public FeatureTypeInfoAllOf circularArcPresent(Boolean circularArcPresent) {
    
    this.circularArcPresent = circularArcPresent;
    return this;
  }

   /**
   * Get circularArcPresent
   * @return circularArcPresent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CIRCULAR_ARC_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCircularArcPresent() {
    return circularArcPresent;
  }


  public void setCircularArcPresent(Boolean circularArcPresent) {
    this.circularArcPresent = circularArcPresent;
  }


  public FeatureTypeInfoAllOf encodeMeasures(Boolean encodeMeasures) {
    
    this.encodeMeasures = encodeMeasures;
    return this;
  }

   /**
   * Get encodeMeasures
   * @return encodeMeasures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENCODE_MEASURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEncodeMeasures() {
    return encodeMeasures;
  }


  public void setEncodeMeasures(Boolean encodeMeasures) {
    this.encodeMeasures = encodeMeasures;
  }


  public FeatureTypeInfoAllOf linearizationTolerance(BigDecimal linearizationTolerance) {
    
    this.linearizationTolerance = linearizationTolerance;
    return this;
  }

   /**
   * Tolerance used to linearize this feature type, as an absolute value expressed in the geometries own CRS
   * @return linearizationTolerance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tolerance used to linearize this feature type, as an absolute value expressed in the geometries own CRS")
  @JsonProperty(JSON_PROPERTY_LINEARIZATION_TOLERANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLinearizationTolerance() {
    return linearizationTolerance;
  }


  public void setLinearizationTolerance(BigDecimal linearizationTolerance) {
    this.linearizationTolerance = linearizationTolerance;
  }


  public FeatureTypeInfoAllOf attributes(List<org.geoserver.openapi.model.catalog.AttributeTypeInfo> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public FeatureTypeInfoAllOf addAttributesItem(org.geoserver.openapi.model.catalog.AttributeTypeInfo attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * The attributes that the feature type exposes.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The attributes that the feature type exposes.")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<org.geoserver.openapi.model.catalog.AttributeTypeInfo> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<org.geoserver.openapi.model.catalog.AttributeTypeInfo> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureTypeInfoAllOf featureTypeInfoAllOf = (FeatureTypeInfoAllOf) o;
    return Objects.equals(this.store, featureTypeInfoAllOf.store) &&
        Objects.equals(this.cqlFilter, featureTypeInfoAllOf.cqlFilter) &&
        Objects.equals(this.maxFeatures, featureTypeInfoAllOf.maxFeatures) &&
        Objects.equals(this.numDecimals, featureTypeInfoAllOf.numDecimals) &&
        Objects.equals(this.padWithZeros, featureTypeInfoAllOf.padWithZeros) &&
        Objects.equals(this.forcedDecimal, featureTypeInfoAllOf.forcedDecimal) &&
        Objects.equals(this.responseSRS, featureTypeInfoAllOf.responseSRS) &&
        Objects.equals(this.overridingServiceSRS, featureTypeInfoAllOf.overridingServiceSRS) &&
        Objects.equals(this.skipNumberMatched, featureTypeInfoAllOf.skipNumberMatched) &&
        Objects.equals(this.circularArcPresent, featureTypeInfoAllOf.circularArcPresent) &&
        Objects.equals(this.encodeMeasures, featureTypeInfoAllOf.encodeMeasures) &&
        Objects.equals(this.linearizationTolerance, featureTypeInfoAllOf.linearizationTolerance) &&
        Objects.equals(this.attributes, featureTypeInfoAllOf.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(store, cqlFilter, maxFeatures, numDecimals, padWithZeros, forcedDecimal, responseSRS, overridingServiceSRS, skipNumberMatched, circularArcPresent, encodeMeasures, linearizationTolerance, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureTypeInfoAllOf {\n");
    sb.append("    store: ").append(toIndentedString(store)).append("\n");
    sb.append("    cqlFilter: ").append(toIndentedString(cqlFilter)).append("\n");
    sb.append("    maxFeatures: ").append(toIndentedString(maxFeatures)).append("\n");
    sb.append("    numDecimals: ").append(toIndentedString(numDecimals)).append("\n");
    sb.append("    padWithZeros: ").append(toIndentedString(padWithZeros)).append("\n");
    sb.append("    forcedDecimal: ").append(toIndentedString(forcedDecimal)).append("\n");
    sb.append("    responseSRS: ").append(toIndentedString(responseSRS)).append("\n");
    sb.append("    overridingServiceSRS: ").append(toIndentedString(overridingServiceSRS)).append("\n");
    sb.append("    skipNumberMatched: ").append(toIndentedString(skipNumberMatched)).append("\n");
    sb.append("    circularArcPresent: ").append(toIndentedString(circularArcPresent)).append("\n");
    sb.append("    encodeMeasures: ").append(toIndentedString(encodeMeasures)).append("\n");
    sb.append("    linearizationTolerance: ").append(toIndentedString(linearizationTolerance)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

