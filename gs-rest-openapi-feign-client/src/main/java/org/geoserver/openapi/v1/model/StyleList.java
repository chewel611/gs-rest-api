/*
 * GeoServer Styles
 * A style describes how a resource is symbolized or rendered by the Web Map Service.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.geoserver.openapi.v1.model.NamedLink;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * StyleList
 */
@JsonPropertyOrder({
  StyleList.JSON_PROPERTY_STYLE
})

public class StyleList {
  public static final String JSON_PROPERTY_STYLE = "style";
  private List<NamedLink> style = null;


  public StyleList style(List<NamedLink> style) {
    
    this.style = style;
    return this;
  }

  public StyleList addStyleItem(NamedLink styleItem) {
    if (this.style == null) {
      this.style = new ArrayList<>();
    }
    this.style.add(styleItem);
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NamedLink> getStyle() {
    return style;
  }


  public void setStyle(List<NamedLink> style) {
    this.style = style;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StyleList styleList = (StyleList) o;
    return Objects.equals(this.style, styleList.style);
  }

  @Override
  public int hashCode() {
    return Objects.hash(style);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StyleList {\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

