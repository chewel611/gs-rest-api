/*
 * GeoServer Styles
 * A style describes how a resource is symbolized or rendered by the Web Map Service.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * StyleInfoPost
 */
@JsonPropertyOrder({
  StyleInfoPost.JSON_PROPERTY_NAME,
  StyleInfoPost.JSON_PROPERTY_FILENAME
})

public class StyleInfoPost {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  private String filename;


  public StyleInfoPost name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of style
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "roads_style", value = "Name of style")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public StyleInfoPost filename(String filename) {
    
    this.filename = filename;
    return this;
  }

   /**
   * Name of filename containing SLD code
   * @return filename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "roads.sld", value = "Name of filename containing SLD code")
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilename() {
    return filename;
  }


  public void setFilename(String filename) {
    this.filename = filename;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StyleInfoPost styleInfoPost = (StyleInfoPost) o;
    return Objects.equals(this.name, styleInfoPost.name) &&
        Objects.equals(this.filename, styleInfoPost.filename);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, filename);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StyleInfoPost {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

