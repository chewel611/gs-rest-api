/*
 * GeoServer Feature Types
 * A feature type is a vector based spatial resource or data set that originates from a data store. In some cases, such as with a shapefile, a feature type has a one-to-one relationship with its data store. In other cases, such as PostGIS, the relationship of feature type to data store is many-to-one, feature types corresponding to a table in the database.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.geoserver.openapi.v1.model.AttributeTypeInfoResponse;
import org.geoserver.openapi.v1.model.StringArrayResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * FeatureTypeResponseAllOf
 */
@JsonPropertyOrder({
  FeatureTypeResponseAllOf.JSON_PROPERTY_CQL_FILTER,
  FeatureTypeResponseAllOf.JSON_PROPERTY_MAX_FEATURES,
  FeatureTypeResponseAllOf.JSON_PROPERTY_NUM_DECIMALS,
  FeatureTypeResponseAllOf.JSON_PROPERTY_PAD_WITH_ZEROS,
  FeatureTypeResponseAllOf.JSON_PROPERTY_FORCED_DECIMAL,
  FeatureTypeResponseAllOf.JSON_PROPERTY_RESPONSE_S_R_S,
  FeatureTypeResponseAllOf.JSON_PROPERTY_OVERRIDING_SERVICE_S_R_S,
  FeatureTypeResponseAllOf.JSON_PROPERTY_SKIP_NUMBER_MATCHED,
  FeatureTypeResponseAllOf.JSON_PROPERTY_CIRCULAR_ARC_PRESENT,
  FeatureTypeResponseAllOf.JSON_PROPERTY_ENCODE_MEASURES,
  FeatureTypeResponseAllOf.JSON_PROPERTY_LINEARIZATION_TOLERANCE,
  FeatureTypeResponseAllOf.JSON_PROPERTY_ATTRIBUTES
})

public class FeatureTypeResponseAllOf {
  public static final String JSON_PROPERTY_CQL_FILTER = "cqlFilter";
  private String cqlFilter;

  public static final String JSON_PROPERTY_MAX_FEATURES = "maxFeatures";
  private Integer maxFeatures;

  public static final String JSON_PROPERTY_NUM_DECIMALS = "numDecimals";
  private Integer numDecimals;

  public static final String JSON_PROPERTY_PAD_WITH_ZEROS = "padWithZeros";
  private Boolean padWithZeros;

  public static final String JSON_PROPERTY_FORCED_DECIMAL = "forcedDecimal";
  private Boolean forcedDecimal;

  public static final String JSON_PROPERTY_RESPONSE_S_R_S = "responseSRS";
  private StringArrayResponse responseSRS;

  public static final String JSON_PROPERTY_OVERRIDING_SERVICE_S_R_S = "overridingServiceSRS";
  private Boolean overridingServiceSRS;

  public static final String JSON_PROPERTY_SKIP_NUMBER_MATCHED = "skipNumberMatched";
  private Boolean skipNumberMatched;

  public static final String JSON_PROPERTY_CIRCULAR_ARC_PRESENT = "circularArcPresent";
  private Boolean circularArcPresent;

  public static final String JSON_PROPERTY_ENCODE_MEASURES = "encodeMeasures";
  private Boolean encodeMeasures;

  public static final String JSON_PROPERTY_LINEARIZATION_TOLERANCE = "linearizationTolerance";
  private BigDecimal linearizationTolerance;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private AttributeTypeInfoResponse attributes;


  public FeatureTypeResponseAllOf cqlFilter(String cqlFilter) {
    
    this.cqlFilter = cqlFilter;
    return this;
  }

   /**
   * Get cqlFilter
   * @return cqlFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CQL_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCqlFilter() {
    return cqlFilter;
  }


  public void setCqlFilter(String cqlFilter) {
    this.cqlFilter = cqlFilter;
  }


  public FeatureTypeResponseAllOf maxFeatures(Integer maxFeatures) {
    
    this.maxFeatures = maxFeatures;
    return this;
  }

   /**
   * Get maxFeatures
   * @return maxFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxFeatures() {
    return maxFeatures;
  }


  public void setMaxFeatures(Integer maxFeatures) {
    this.maxFeatures = maxFeatures;
  }


  public FeatureTypeResponseAllOf numDecimals(Integer numDecimals) {
    
    this.numDecimals = numDecimals;
    return this;
  }

   /**
   * Get numDecimals
   * @return numDecimals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NUM_DECIMALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumDecimals() {
    return numDecimals;
  }


  public void setNumDecimals(Integer numDecimals) {
    this.numDecimals = numDecimals;
  }


  public FeatureTypeResponseAllOf padWithZeros(Boolean padWithZeros) {
    
    this.padWithZeros = padWithZeros;
    return this;
  }

   /**
   * Get padWithZeros
   * @return padWithZeros
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAD_WITH_ZEROS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPadWithZeros() {
    return padWithZeros;
  }


  public void setPadWithZeros(Boolean padWithZeros) {
    this.padWithZeros = padWithZeros;
  }


  public FeatureTypeResponseAllOf forcedDecimal(Boolean forcedDecimal) {
    
    this.forcedDecimal = forcedDecimal;
    return this;
  }

   /**
   * Get forcedDecimal
   * @return forcedDecimal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FORCED_DECIMAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getForcedDecimal() {
    return forcedDecimal;
  }


  public void setForcedDecimal(Boolean forcedDecimal) {
    this.forcedDecimal = forcedDecimal;
  }


  public FeatureTypeResponseAllOf responseSRS(StringArrayResponse responseSRS) {
    
    this.responseSRS = responseSRS;
    return this;
  }

   /**
   * Get responseSRS
   * @return responseSRS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESPONSE_S_R_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StringArrayResponse getResponseSRS() {
    return responseSRS;
  }


  public void setResponseSRS(StringArrayResponse responseSRS) {
    this.responseSRS = responseSRS;
  }


  public FeatureTypeResponseAllOf overridingServiceSRS(Boolean overridingServiceSRS) {
    
    this.overridingServiceSRS = overridingServiceSRS;
    return this;
  }

   /**
   * Get overridingServiceSRS
   * @return overridingServiceSRS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OVERRIDING_SERVICE_S_R_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOverridingServiceSRS() {
    return overridingServiceSRS;
  }


  public void setOverridingServiceSRS(Boolean overridingServiceSRS) {
    this.overridingServiceSRS = overridingServiceSRS;
  }


  public FeatureTypeResponseAllOf skipNumberMatched(Boolean skipNumberMatched) {
    
    this.skipNumberMatched = skipNumberMatched;
    return this;
  }

   /**
   * Get skipNumberMatched
   * @return skipNumberMatched
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SKIP_NUMBER_MATCHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipNumberMatched() {
    return skipNumberMatched;
  }


  public void setSkipNumberMatched(Boolean skipNumberMatched) {
    this.skipNumberMatched = skipNumberMatched;
  }


  public FeatureTypeResponseAllOf circularArcPresent(Boolean circularArcPresent) {
    
    this.circularArcPresent = circularArcPresent;
    return this;
  }

   /**
   * Get circularArcPresent
   * @return circularArcPresent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CIRCULAR_ARC_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCircularArcPresent() {
    return circularArcPresent;
  }


  public void setCircularArcPresent(Boolean circularArcPresent) {
    this.circularArcPresent = circularArcPresent;
  }


  public FeatureTypeResponseAllOf encodeMeasures(Boolean encodeMeasures) {
    
    this.encodeMeasures = encodeMeasures;
    return this;
  }

   /**
   * Get encodeMeasures
   * @return encodeMeasures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENCODE_MEASURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEncodeMeasures() {
    return encodeMeasures;
  }


  public void setEncodeMeasures(Boolean encodeMeasures) {
    this.encodeMeasures = encodeMeasures;
  }


  public FeatureTypeResponseAllOf linearizationTolerance(BigDecimal linearizationTolerance) {
    
    this.linearizationTolerance = linearizationTolerance;
    return this;
  }

   /**
   * Get linearizationTolerance
   * @return linearizationTolerance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINEARIZATION_TOLERANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLinearizationTolerance() {
    return linearizationTolerance;
  }


  public void setLinearizationTolerance(BigDecimal linearizationTolerance) {
    this.linearizationTolerance = linearizationTolerance;
  }


  public FeatureTypeResponseAllOf attributes(AttributeTypeInfoResponse attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AttributeTypeInfoResponse getAttributes() {
    return attributes;
  }


  public void setAttributes(AttributeTypeInfoResponse attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureTypeResponseAllOf featureTypeResponseAllOf = (FeatureTypeResponseAllOf) o;
    return Objects.equals(this.cqlFilter, featureTypeResponseAllOf.cqlFilter) &&
        Objects.equals(this.maxFeatures, featureTypeResponseAllOf.maxFeatures) &&
        Objects.equals(this.numDecimals, featureTypeResponseAllOf.numDecimals) &&
        Objects.equals(this.padWithZeros, featureTypeResponseAllOf.padWithZeros) &&
        Objects.equals(this.forcedDecimal, featureTypeResponseAllOf.forcedDecimal) &&
        Objects.equals(this.responseSRS, featureTypeResponseAllOf.responseSRS) &&
        Objects.equals(this.overridingServiceSRS, featureTypeResponseAllOf.overridingServiceSRS) &&
        Objects.equals(this.skipNumberMatched, featureTypeResponseAllOf.skipNumberMatched) &&
        Objects.equals(this.circularArcPresent, featureTypeResponseAllOf.circularArcPresent) &&
        Objects.equals(this.encodeMeasures, featureTypeResponseAllOf.encodeMeasures) &&
        Objects.equals(this.linearizationTolerance, featureTypeResponseAllOf.linearizationTolerance) &&
        Objects.equals(this.attributes, featureTypeResponseAllOf.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cqlFilter, maxFeatures, numDecimals, padWithZeros, forcedDecimal, responseSRS, overridingServiceSRS, skipNumberMatched, circularArcPresent, encodeMeasures, linearizationTolerance, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureTypeResponseAllOf {\n");
    sb.append("    cqlFilter: ").append(toIndentedString(cqlFilter)).append("\n");
    sb.append("    maxFeatures: ").append(toIndentedString(maxFeatures)).append("\n");
    sb.append("    numDecimals: ").append(toIndentedString(numDecimals)).append("\n");
    sb.append("    padWithZeros: ").append(toIndentedString(padWithZeros)).append("\n");
    sb.append("    forcedDecimal: ").append(toIndentedString(forcedDecimal)).append("\n");
    sb.append("    responseSRS: ").append(toIndentedString(responseSRS)).append("\n");
    sb.append("    overridingServiceSRS: ").append(toIndentedString(overridingServiceSRS)).append("\n");
    sb.append("    skipNumberMatched: ").append(toIndentedString(skipNumberMatched)).append("\n");
    sb.append("    circularArcPresent: ").append(toIndentedString(circularArcPresent)).append("\n");
    sb.append("    encodeMeasures: ").append(toIndentedString(encodeMeasures)).append("\n");
    sb.append("    linearizationTolerance: ").append(toIndentedString(linearizationTolerance)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

