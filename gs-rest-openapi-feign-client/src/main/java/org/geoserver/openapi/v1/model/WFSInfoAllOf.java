/*
 * OWS Services
 * An OWS service refers to any of the OGC services that GeoServer supports, such as WFS, WMS, and WCS. These endpoints controls the settings of these services.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * WFSInfoAllOf
 */
@JsonPropertyOrder({
  WFSInfoAllOf.JSON_PROPERTY_GML,
  WFSInfoAllOf.JSON_PROPERTY_SERVICE_LEVEL,
  WFSInfoAllOf.JSON_PROPERTY_MAX_FEATURES,
  WFSInfoAllOf.JSON_PROPERTY_FEATURE_BOUNDING,
  WFSInfoAllOf.JSON_PROPERTY_CANONICAL_SCHEMA_LOCATION,
  WFSInfoAllOf.JSON_PROPERTY_ENCODE_FEATURE_MEMBER,
  WFSInfoAllOf.JSON_PROPERTY_HITS_IGNORE_MAX_FEATURES,
  WFSInfoAllOf.JSON_PROPERTY_GET_FEATURE_OUTPUT_TYPE_CHECKING_ENABLED,
  WFSInfoAllOf.JSON_PROPERTY_GET_FEATURE_OUTPUT_TYPES
})

public class WFSInfoAllOf {
  public static final String JSON_PROPERTY_GML = "gml";
  private org.geoserver.openapi.model.config.WFSInfoGmlSettings gml;

  public static final String JSON_PROPERTY_SERVICE_LEVEL = "serviceLevel";
  private org.geoserver.openapi.model.config.WFSServiceLevel serviceLevel;

  public static final String JSON_PROPERTY_MAX_FEATURES = "maxFeatures";
  private Integer maxFeatures;

  public static final String JSON_PROPERTY_FEATURE_BOUNDING = "featureBounding";
  private Boolean featureBounding;

  public static final String JSON_PROPERTY_CANONICAL_SCHEMA_LOCATION = "canonicalSchemaLocation";
  private Boolean canonicalSchemaLocation;

  public static final String JSON_PROPERTY_ENCODE_FEATURE_MEMBER = "encodeFeatureMember";
  private Boolean encodeFeatureMember;

  public static final String JSON_PROPERTY_HITS_IGNORE_MAX_FEATURES = "hitsIgnoreMaxFeatures";
  private Boolean hitsIgnoreMaxFeatures;

  public static final String JSON_PROPERTY_GET_FEATURE_OUTPUT_TYPE_CHECKING_ENABLED = "getFeatureOutputTypeCheckingEnabled";
  private Boolean getFeatureOutputTypeCheckingEnabled;

  public static final String JSON_PROPERTY_GET_FEATURE_OUTPUT_TYPES = "getFeatureOutputTypes";
  private List<String> getFeatureOutputTypes = null;


  public WFSInfoAllOf gml(org.geoserver.openapi.model.config.WFSInfoGmlSettings gml) {
    
    this.gml = gml;
    return this;
  }

   /**
   * Get gml
   * @return gml
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.geoserver.openapi.model.config.WFSInfoGmlSettings getGml() {
    return gml;
  }


  public void setGml(org.geoserver.openapi.model.config.WFSInfoGmlSettings gml) {
    this.gml = gml;
  }


  public WFSInfoAllOf serviceLevel(org.geoserver.openapi.model.config.WFSServiceLevel serviceLevel) {
    
    this.serviceLevel = serviceLevel;
    return this;
  }

   /**
   * Get serviceLevel
   * @return serviceLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.geoserver.openapi.model.config.WFSServiceLevel getServiceLevel() {
    return serviceLevel;
  }


  public void setServiceLevel(org.geoserver.openapi.model.config.WFSServiceLevel serviceLevel) {
    this.serviceLevel = serviceLevel;
  }


  public WFSInfoAllOf maxFeatures(Integer maxFeatures) {
    
    this.maxFeatures = maxFeatures;
    return this;
  }

   /**
   * Global cap on the number of features to allow when processing a request
   * @return maxFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Global cap on the number of features to allow when processing a request")
  @JsonProperty(JSON_PROPERTY_MAX_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxFeatures() {
    return maxFeatures;
  }


  public void setMaxFeatures(Integer maxFeatures) {
    this.maxFeatures = maxFeatures;
  }


  public WFSInfoAllOf featureBounding(Boolean featureBounding) {
    
    this.featureBounding = featureBounding;
    return this;
  }

   /**
   * Flag which determines if gml:bounds elements should be encoded at the feature level in GML output
   * @return featureBounding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag which determines if gml:bounds elements should be encoded at the feature level in GML output")
  @JsonProperty(JSON_PROPERTY_FEATURE_BOUNDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFeatureBounding() {
    return featureBounding;
  }


  public void setFeatureBounding(Boolean featureBounding) {
    this.featureBounding = featureBounding;
  }


  public WFSInfoAllOf canonicalSchemaLocation(Boolean canonicalSchemaLocation) {
    
    this.canonicalSchemaLocation = canonicalSchemaLocation;
    return this;
  }

   /**
   * Flag that determines the encoding of the WFS schemaLocation. True if the WFS schemaLocation should refer to the canonical location, false if the WFS schemaLocation should refer to a copy served by GeoServer.
   * @return canonicalSchemaLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag that determines the encoding of the WFS schemaLocation. True if the WFS schemaLocation should refer to the canonical location, false if the WFS schemaLocation should refer to a copy served by GeoServer.")
  @JsonProperty(JSON_PROPERTY_CANONICAL_SCHEMA_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanonicalSchemaLocation() {
    return canonicalSchemaLocation;
  }


  public void setCanonicalSchemaLocation(Boolean canonicalSchemaLocation) {
    this.canonicalSchemaLocation = canonicalSchemaLocation;
  }


  public WFSInfoAllOf encodeFeatureMember(Boolean encodeFeatureMember) {
    
    this.encodeFeatureMember = encodeFeatureMember;
    return this;
  }

   /**
   * Flag that determines encoding of featureMember or featureMembers. True if the featureMember should be encoded False if the featureMembers should be encoded.
   * @return encodeFeatureMember
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag that determines encoding of featureMember or featureMembers. True if the featureMember should be encoded False if the featureMembers should be encoded.")
  @JsonProperty(JSON_PROPERTY_ENCODE_FEATURE_MEMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEncodeFeatureMember() {
    return encodeFeatureMember;
  }


  public void setEncodeFeatureMember(Boolean encodeFeatureMember) {
    this.encodeFeatureMember = encodeFeatureMember;
  }


  public WFSInfoAllOf hitsIgnoreMaxFeatures(Boolean hitsIgnoreMaxFeatures) {
    
    this.hitsIgnoreMaxFeatures = hitsIgnoreMaxFeatures;
    return this;
  }

   /**
   * Flag that determines if WFS hit requests (counts) will ignore the maximum features limit for this server
   * @return hitsIgnoreMaxFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag that determines if WFS hit requests (counts) will ignore the maximum features limit for this server")
  @JsonProperty(JSON_PROPERTY_HITS_IGNORE_MAX_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHitsIgnoreMaxFeatures() {
    return hitsIgnoreMaxFeatures;
  }


  public void setHitsIgnoreMaxFeatures(Boolean hitsIgnoreMaxFeatures) {
    this.hitsIgnoreMaxFeatures = hitsIgnoreMaxFeatures;
  }


  public WFSInfoAllOf getFeatureOutputTypeCheckingEnabled(Boolean getFeatureOutputTypeCheckingEnabled) {
    
    this.getFeatureOutputTypeCheckingEnabled = getFeatureOutputTypeCheckingEnabled;
    return this;
  }

   /**
   * Flag that determines if WFS GetFeature output type checking is enabled
   * @return getFeatureOutputTypeCheckingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag that determines if WFS GetFeature output type checking is enabled")
  @JsonProperty(JSON_PROPERTY_GET_FEATURE_OUTPUT_TYPE_CHECKING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGetFeatureOutputTypeCheckingEnabled() {
    return getFeatureOutputTypeCheckingEnabled;
  }


  public void setGetFeatureOutputTypeCheckingEnabled(Boolean getFeatureOutputTypeCheckingEnabled) {
    this.getFeatureOutputTypeCheckingEnabled = getFeatureOutputTypeCheckingEnabled;
  }


  public WFSInfoAllOf getFeatureOutputTypes(List<String> getFeatureOutputTypes) {
    
    this.getFeatureOutputTypes = getFeatureOutputTypes;
    return this;
  }

  public WFSInfoAllOf addGetFeatureOutputTypesItem(String getFeatureOutputTypesItem) {
    if (this.getFeatureOutputTypes == null) {
      this.getFeatureOutputTypes = new ArrayList<>();
    }
    this.getFeatureOutputTypes.add(getFeatureOutputTypesItem);
    return this;
  }

   /**
   * A set of output types allowed for a getFeature request. Active if getFeatureOutputTypeCheckingEnabled is true
   * @return getFeatureOutputTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of output types allowed for a getFeature request. Active if getFeatureOutputTypeCheckingEnabled is true")
  @JsonProperty(JSON_PROPERTY_GET_FEATURE_OUTPUT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getGetFeatureOutputTypes() {
    return getFeatureOutputTypes;
  }


  public void setGetFeatureOutputTypes(List<String> getFeatureOutputTypes) {
    this.getFeatureOutputTypes = getFeatureOutputTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WFSInfoAllOf wfSInfoAllOf = (WFSInfoAllOf) o;
    return Objects.equals(this.gml, wfSInfoAllOf.gml) &&
        Objects.equals(this.serviceLevel, wfSInfoAllOf.serviceLevel) &&
        Objects.equals(this.maxFeatures, wfSInfoAllOf.maxFeatures) &&
        Objects.equals(this.featureBounding, wfSInfoAllOf.featureBounding) &&
        Objects.equals(this.canonicalSchemaLocation, wfSInfoAllOf.canonicalSchemaLocation) &&
        Objects.equals(this.encodeFeatureMember, wfSInfoAllOf.encodeFeatureMember) &&
        Objects.equals(this.hitsIgnoreMaxFeatures, wfSInfoAllOf.hitsIgnoreMaxFeatures) &&
        Objects.equals(this.getFeatureOutputTypeCheckingEnabled, wfSInfoAllOf.getFeatureOutputTypeCheckingEnabled) &&
        Objects.equals(this.getFeatureOutputTypes, wfSInfoAllOf.getFeatureOutputTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gml, serviceLevel, maxFeatures, featureBounding, canonicalSchemaLocation, encodeFeatureMember, hitsIgnoreMaxFeatures, getFeatureOutputTypeCheckingEnabled, getFeatureOutputTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WFSInfoAllOf {\n");
    sb.append("    gml: ").append(toIndentedString(gml)).append("\n");
    sb.append("    serviceLevel: ").append(toIndentedString(serviceLevel)).append("\n");
    sb.append("    maxFeatures: ").append(toIndentedString(maxFeatures)).append("\n");
    sb.append("    featureBounding: ").append(toIndentedString(featureBounding)).append("\n");
    sb.append("    canonicalSchemaLocation: ").append(toIndentedString(canonicalSchemaLocation)).append("\n");
    sb.append("    encodeFeatureMember: ").append(toIndentedString(encodeFeatureMember)).append("\n");
    sb.append("    hitsIgnoreMaxFeatures: ").append(toIndentedString(hitsIgnoreMaxFeatures)).append("\n");
    sb.append("    getFeatureOutputTypeCheckingEnabled: ").append(toIndentedString(getFeatureOutputTypeCheckingEnabled)).append("\n");
    sb.append("    getFeatureOutputTypes: ").append(toIndentedString(getFeatureOutputTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

