/*
 * OWS Services
 * An OWS service refers to any of the OGC services that GeoServer supports, such as WFS, WMS, and WCS. These endpoints controls the settings of these services.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * WCSInfoWrapper
 */
@JsonPropertyOrder({
  WCSInfoWrapper.JSON_PROPERTY_WCS
})

public class WCSInfoWrapper {
  public static final String JSON_PROPERTY_WCS = "wcs";
  private org.geoserver.openapi.model.config.WCSInfo wcs = null;


  public WCSInfoWrapper wcs(org.geoserver.openapi.model.config.WCSInfo wcs) {
    
    this.wcs = wcs;
    return this;
  }

   /**
   * Get wcs
   * @return wcs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WCS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.geoserver.openapi.model.config.WCSInfo getWcs() {
    return wcs;
  }


  public void setWcs(org.geoserver.openapi.model.config.WCSInfo wcs) {
    this.wcs = wcs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WCSInfoWrapper wcSInfoWrapper = (WCSInfoWrapper) o;
    return Objects.equals(this.wcs, wcSInfoWrapper.wcs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(wcs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WCSInfoWrapper {\n");
    sb.append("    wcs: ").append(toIndentedString(wcs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

