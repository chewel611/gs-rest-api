/*
 * GeoServer Layers
 * A layer is a published resource (feature type or coverage).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.geoserver.openapi.v1.model.NamedLink;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Avaialble styles for layer publication
 */
@ApiModel(description = "Avaialble styles for layer publication")
@JsonPropertyOrder({
  LayerStyles.JSON_PROPERTY_AT_CLASS,
  LayerStyles.JSON_PROPERTY_STYLE
})

public class LayerStyles {
  /**
   * required value linked-hash-set.
   */
  public enum AtClassEnum {
    LINKED_HASH_SET("linked-hash-set");

    private String value;

    AtClassEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AtClassEnum fromValue(String value) {
      for (AtClassEnum b : AtClassEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AT_CLASS = "@class";
  private AtClassEnum atClass;

  public static final String JSON_PROPERTY_STYLE = "style";
  private List<NamedLink> style = null;


  public LayerStyles atClass(AtClassEnum atClass) {
    
    this.atClass = atClass;
    return this;
  }

   /**
   * required value linked-hash-set.
   * @return atClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "required value linked-hash-set.")
  @JsonProperty(JSON_PROPERTY_AT_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AtClassEnum getAtClass() {
    return atClass;
  }


  public void setAtClass(AtClassEnum atClass) {
    this.atClass = atClass;
  }


  public LayerStyles style(List<NamedLink> style) {
    
    this.style = style;
    return this;
  }

  public LayerStyles addStyleItem(NamedLink styleItem) {
    if (this.style == null) {
      this.style = new ArrayList<>();
    }
    this.style.add(styleItem);
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NamedLink> getStyle() {
    return style;
  }


  public void setStyle(List<NamedLink> style) {
    this.style = style;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LayerStyles layerStyles = (LayerStyles) o;
    return Objects.equals(this.atClass, layerStyles.atClass) &&
        Objects.equals(this.style, layerStyles.style);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atClass, style);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LayerStyles {\n");
    sb.append("    atClass: ").append(toIndentedString(atClass)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

