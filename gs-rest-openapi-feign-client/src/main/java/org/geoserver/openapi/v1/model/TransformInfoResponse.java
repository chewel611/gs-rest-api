/*
 * GeoServer Coverages
 * A coverage is a raster data set which originates from a coverage store.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * TransformInfoResponse
 */
@JsonPropertyOrder({
  TransformInfoResponse.JSON_PROPERTY_SCALE_X,
  TransformInfoResponse.JSON_PROPERTY_SCALE_Y,
  TransformInfoResponse.JSON_PROPERTY_SHEAR_X,
  TransformInfoResponse.JSON_PROPERTY_SHEAR_Y,
  TransformInfoResponse.JSON_PROPERTY_TRANSLATE_X,
  TransformInfoResponse.JSON_PROPERTY_TRANSLATE_Y
})

public class TransformInfoResponse {
  public static final String JSON_PROPERTY_SCALE_X = "scaleX";
  private Double scaleX;

  public static final String JSON_PROPERTY_SCALE_Y = "scaleY";
  private Double scaleY;

  public static final String JSON_PROPERTY_SHEAR_X = "shearX";
  private Double shearX;

  public static final String JSON_PROPERTY_SHEAR_Y = "shearY";
  private Double shearY;

  public static final String JSON_PROPERTY_TRANSLATE_X = "translateX";
  private Double translateX;

  public static final String JSON_PROPERTY_TRANSLATE_Y = "translateY";
  private Double translateY;


  public TransformInfoResponse scaleX(Double scaleX) {
    
    this.scaleX = scaleX;
    return this;
  }

   /**
   * Get scaleX
   * @return scaleX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCALE_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getScaleX() {
    return scaleX;
  }


  public void setScaleX(Double scaleX) {
    this.scaleX = scaleX;
  }


  public TransformInfoResponse scaleY(Double scaleY) {
    
    this.scaleY = scaleY;
    return this;
  }

   /**
   * Get scaleY
   * @return scaleY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCALE_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getScaleY() {
    return scaleY;
  }


  public void setScaleY(Double scaleY) {
    this.scaleY = scaleY;
  }


  public TransformInfoResponse shearX(Double shearX) {
    
    this.shearX = shearX;
    return this;
  }

   /**
   * Get shearX
   * @return shearX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHEAR_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getShearX() {
    return shearX;
  }


  public void setShearX(Double shearX) {
    this.shearX = shearX;
  }


  public TransformInfoResponse shearY(Double shearY) {
    
    this.shearY = shearY;
    return this;
  }

   /**
   * Get shearY
   * @return shearY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHEAR_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getShearY() {
    return shearY;
  }


  public void setShearY(Double shearY) {
    this.shearY = shearY;
  }


  public TransformInfoResponse translateX(Double translateX) {
    
    this.translateX = translateX;
    return this;
  }

   /**
   * Get translateX
   * @return translateX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSLATE_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTranslateX() {
    return translateX;
  }


  public void setTranslateX(Double translateX) {
    this.translateX = translateX;
  }


  public TransformInfoResponse translateY(Double translateY) {
    
    this.translateY = translateY;
    return this;
  }

   /**
   * Get translateY
   * @return translateY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSLATE_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTranslateY() {
    return translateY;
  }


  public void setTranslateY(Double translateY) {
    this.translateY = translateY;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransformInfoResponse transformInfoResponse = (TransformInfoResponse) o;
    return Objects.equals(this.scaleX, transformInfoResponse.scaleX) &&
        Objects.equals(this.scaleY, transformInfoResponse.scaleY) &&
        Objects.equals(this.shearX, transformInfoResponse.shearX) &&
        Objects.equals(this.shearY, transformInfoResponse.shearY) &&
        Objects.equals(this.translateX, transformInfoResponse.translateX) &&
        Objects.equals(this.translateY, transformInfoResponse.translateY);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scaleX, scaleY, shearX, shearY, translateX, translateY);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransformInfoResponse {\n");
    sb.append("    scaleX: ").append(toIndentedString(scaleX)).append("\n");
    sb.append("    scaleY: ").append(toIndentedString(scaleY)).append("\n");
    sb.append("    shearX: ").append(toIndentedString(shearX)).append("\n");
    sb.append("    shearY: ").append(toIndentedString(shearY)).append("\n");
    sb.append("    translateX: ").append(toIndentedString(translateX)).append("\n");
    sb.append("    translateY: ").append(toIndentedString(translateY)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

