/*
 * GeoServer Layers
 * A layer is a published resource (feature type or coverage).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.geoserver.openapi.v1.model.LayerStyles;
import org.geoserver.openapi.v1.model.NamedLink;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Layer
 */
@JsonPropertyOrder({
  Layer.JSON_PROPERTY_NAME,
  Layer.JSON_PROPERTY_PATH,
  Layer.JSON_PROPERTY_TYPE,
  Layer.JSON_PROPERTY_DEFAULT_STYLE,
  Layer.JSON_PROPERTY_STYLES,
  Layer.JSON_PROPERTY_RESOURCE,
  Layer.JSON_PROPERTY_OPAQUE,
  Layer.JSON_PROPERTY_METADATA,
  Layer.JSON_PROPERTY_ATTRIBUTION,
  Layer.JSON_PROPERTY_AUTHORITY_U_R_LS,
  Layer.JSON_PROPERTY_IDENTIFIERS
})

public class Layer {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  /**
   * Type of published layer. Can be VECTOR, RASTER, REMOTE, WMS or GROUP. Must be consistent with resource definition.
   */
  public enum TypeEnum {
    VECTOR("VECTOR"),
    
    RASTER("RASTER"),
    
    REMOTE("REMOTE"),
    
    WMS("WMS"),
    
    GROUP("GROUP");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_DEFAULT_STYLE = "defaultStyle";
  private NamedLink defaultStyle;

  public static final String JSON_PROPERTY_STYLES = "styles";
  private LayerStyles styles;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private NamedLink resource;

  public static final String JSON_PROPERTY_OPAQUE = "opaque";
  private Boolean opaque;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private org.geoserver.openapi.model.catalog.MetadataMap metadata;

  public static final String JSON_PROPERTY_ATTRIBUTION = "attribution";
  private org.geoserver.openapi.model.catalog.AttributionInfo attribution;

  public static final String JSON_PROPERTY_AUTHORITY_U_R_LS = "authorityURLs";
  private List<org.geoserver.openapi.model.catalog.AuthorityURLInfo> authorityURLs = null;

  public static final String JSON_PROPERTY_IDENTIFIERS = "identifiers";
  private List<org.geoserver.openapi.model.catalog.LayerIdentifierInfo> identifiers = null;


  public Layer name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the layer
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the layer")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Layer path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Location of the layer in the WMS capabilities layer tree
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location of the layer in the WMS capabilities layer tree")
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public Layer type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of published layer. Can be VECTOR, RASTER, REMOTE, WMS or GROUP. Must be consistent with resource definition.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of published layer. Can be VECTOR, RASTER, REMOTE, WMS or GROUP. Must be consistent with resource definition.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Layer defaultStyle(NamedLink defaultStyle) {
    
    this.defaultStyle = defaultStyle;
    return this;
  }

   /**
   * Get defaultStyle
   * @return defaultStyle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEFAULT_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NamedLink getDefaultStyle() {
    return defaultStyle;
  }


  public void setDefaultStyle(NamedLink defaultStyle) {
    this.defaultStyle = defaultStyle;
  }


  public Layer styles(LayerStyles styles) {
    
    this.styles = styles;
    return this;
  }

   /**
   * Get styles
   * @return styles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LayerStyles getStyles() {
    return styles;
  }


  public void setStyles(LayerStyles styles) {
    this.styles = styles;
  }


  public Layer resource(NamedLink resource) {
    
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NamedLink getResource() {
    return resource;
  }


  public void setResource(NamedLink resource) {
    this.resource = resource;
  }


  public Layer opaque(Boolean opaque) {
    
    this.opaque = opaque;
    return this;
  }

   /**
   * Controls layer transparency (whether the layer is opaque or transparent).
   * @return opaque
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls layer transparency (whether the layer is opaque or transparent).")
  @JsonProperty(JSON_PROPERTY_OPAQUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOpaque() {
    return opaque;
  }


  public void setOpaque(Boolean opaque) {
    this.opaque = opaque;
  }


  public Layer metadata(org.geoserver.openapi.model.catalog.MetadataMap metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.geoserver.openapi.model.catalog.MetadataMap getMetadata() {
    return metadata;
  }


  public void setMetadata(org.geoserver.openapi.model.catalog.MetadataMap metadata) {
    this.metadata = metadata;
  }


  public Layer attribution(org.geoserver.openapi.model.catalog.AttributionInfo attribution) {
    
    this.attribution = attribution;
    return this;
  }

   /**
   * Get attribution
   * @return attribution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.geoserver.openapi.model.catalog.AttributionInfo getAttribution() {
    return attribution;
  }


  public void setAttribution(org.geoserver.openapi.model.catalog.AttributionInfo attribution) {
    this.attribution = attribution;
  }


  public Layer authorityURLs(List<org.geoserver.openapi.model.catalog.AuthorityURLInfo> authorityURLs) {
    
    this.authorityURLs = authorityURLs;
    return this;
  }

  public Layer addAuthorityURLsItem(org.geoserver.openapi.model.catalog.AuthorityURLInfo authorityURLsItem) {
    if (this.authorityURLs == null) {
      this.authorityURLs = new ArrayList<>();
    }
    this.authorityURLs.add(authorityURLsItem);
    return this;
  }

   /**
   * Get authorityURLs
   * @return authorityURLs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTHORITY_U_R_LS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<org.geoserver.openapi.model.catalog.AuthorityURLInfo> getAuthorityURLs() {
    return authorityURLs;
  }


  public void setAuthorityURLs(List<org.geoserver.openapi.model.catalog.AuthorityURLInfo> authorityURLs) {
    this.authorityURLs = authorityURLs;
  }


  public Layer identifiers(List<org.geoserver.openapi.model.catalog.LayerIdentifierInfo> identifiers) {
    
    this.identifiers = identifiers;
    return this;
  }

  public Layer addIdentifiersItem(org.geoserver.openapi.model.catalog.LayerIdentifierInfo identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Get identifiers
   * @return identifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IDENTIFIERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<org.geoserver.openapi.model.catalog.LayerIdentifierInfo> getIdentifiers() {
    return identifiers;
  }


  public void setIdentifiers(List<org.geoserver.openapi.model.catalog.LayerIdentifierInfo> identifiers) {
    this.identifiers = identifiers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Layer layer = (Layer) o;
    return Objects.equals(this.name, layer.name) &&
        Objects.equals(this.path, layer.path) &&
        Objects.equals(this.type, layer.type) &&
        Objects.equals(this.defaultStyle, layer.defaultStyle) &&
        Objects.equals(this.styles, layer.styles) &&
        Objects.equals(this.resource, layer.resource) &&
        Objects.equals(this.opaque, layer.opaque) &&
        Objects.equals(this.metadata, layer.metadata) &&
        Objects.equals(this.attribution, layer.attribution) &&
        Objects.equals(this.authorityURLs, layer.authorityURLs) &&
        Objects.equals(this.identifiers, layer.identifiers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, path, type, defaultStyle, styles, resource, opaque, metadata, attribution, authorityURLs, identifiers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Layer {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    defaultStyle: ").append(toIndentedString(defaultStyle)).append("\n");
    sb.append("    styles: ").append(toIndentedString(styles)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    opaque: ").append(toIndentedString(opaque)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    attribution: ").append(toIndentedString(attribution)).append("\n");
    sb.append("    authorityURLs: ").append(toIndentedString(authorityURLs)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

