/*
 * GeoServer Data Stores
 * A data store contains vector format spatial data. It can be a file (such as a shapefile), a database (such as PostGIS), or a server (such as a remote Web Feature Service).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import org.geoserver.openapi.v1.model.ConnectionParameters;
import org.geoserver.openapi.v1.model.NamedLink;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DataStoreResponse
 */
@JsonPropertyOrder({
  DataStoreResponse.JSON_PROPERTY_NAME,
  DataStoreResponse.JSON_PROPERTY_DESCRIPTION,
  DataStoreResponse.JSON_PROPERTY_ENABLED,
  DataStoreResponse.JSON_PROPERTY_WORKSPACE,
  DataStoreResponse.JSON_PROPERTY_CONNECTION_PARAMETERS,
  DataStoreResponse.JSON_PROPERTY_DEFAULT,
  DataStoreResponse.JSON_PROPERTY_FEATURE_TYPES
})

public class DataStoreResponse {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_WORKSPACE = "workspace";
  private NamedLink workspace;

  public static final String JSON_PROPERTY_CONNECTION_PARAMETERS = "connectionParameters";
  private ConnectionParameters connectionParameters;

  public static final String JSON_PROPERTY_DEFAULT = "__default";
  private Boolean _default = false;

  public static final String JSON_PROPERTY_FEATURE_TYPES = "featureTypes";
  private URI featureTypes;


  public DataStoreResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of data store
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of data store")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DataStoreResponse description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of data store
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of data store")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public DataStoreResponse enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Whether or not the data store is enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the data store is enabled")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public DataStoreResponse workspace(NamedLink workspace) {
    
    this.workspace = workspace;
    return this;
  }

   /**
   * Get workspace
   * @return workspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WORKSPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NamedLink getWorkspace() {
    return workspace;
  }


  public void setWorkspace(NamedLink workspace) {
    this.workspace = workspace;
  }


  public DataStoreResponse connectionParameters(ConnectionParameters connectionParameters) {
    
    this.connectionParameters = connectionParameters;
    return this;
  }

   /**
   * Get connectionParameters
   * @return connectionParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTION_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionParameters getConnectionParameters() {
    return connectionParameters;
  }


  public void setConnectionParameters(ConnectionParameters connectionParameters) {
    this.connectionParameters = connectionParameters;
  }


  public DataStoreResponse _default(Boolean _default) {
    
    this._default = _default;
    return this;
  }

   /**
   * Whether or not the data store is the default data store
   * @return _default
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the data store is the default data store")
  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefault() {
    return _default;
  }


  public void setDefault(Boolean _default) {
    this._default = _default;
  }


  public DataStoreResponse featureTypes(URI featureTypes) {
    
    this.featureTypes = featureTypes;
    return this;
  }

   /**
   * link to the datastore feature types collection
   * @return featureTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "link to the datastore feature types collection")
  @JsonProperty(JSON_PROPERTY_FEATURE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getFeatureTypes() {
    return featureTypes;
  }


  public void setFeatureTypes(URI featureTypes) {
    this.featureTypes = featureTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataStoreResponse dataStoreResponse = (DataStoreResponse) o;
    return Objects.equals(this.name, dataStoreResponse.name) &&
        Objects.equals(this.description, dataStoreResponse.description) &&
        Objects.equals(this.enabled, dataStoreResponse.enabled) &&
        Objects.equals(this.workspace, dataStoreResponse.workspace) &&
        Objects.equals(this.connectionParameters, dataStoreResponse.connectionParameters) &&
        Objects.equals(this._default, dataStoreResponse._default) &&
        Objects.equals(this.featureTypes, dataStoreResponse.featureTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, enabled, workspace, connectionParameters, _default, featureTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataStoreResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    workspace: ").append(toIndentedString(workspace)).append("\n");
    sb.append("    connectionParameters: ").append(toIndentedString(connectionParameters)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    featureTypes: ").append(toIndentedString(featureTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

