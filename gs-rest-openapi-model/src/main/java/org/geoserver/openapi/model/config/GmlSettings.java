/*
 * GeoServer Config Model
 * GeoServer Config Model Objects
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.model.config;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.geoserver.openapi.model.config.SrsNameStyle;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * GmlSettings
 */
@JsonPropertyOrder({
  GmlSettings.JSON_PROPERTY_SRS_NAME_STYLE,
  GmlSettings.JSON_PROPERTY_OVERRIDE_G_M_L_ATTRIBUTES
})

public class GmlSettings {
  public static final String JSON_PROPERTY_SRS_NAME_STYLE = "srsNameStyle";
  private List<SrsNameStyle> srsNameStyle = null;

  public static final String JSON_PROPERTY_OVERRIDE_G_M_L_ATTRIBUTES = "overrideGMLAttributes";
  private Boolean overrideGMLAttributes;


  public GmlSettings srsNameStyle(List<SrsNameStyle> srsNameStyle) {
    
    this.srsNameStyle = srsNameStyle;
    return this;
  }

  public GmlSettings addSrsNameStyleItem(SrsNameStyle srsNameStyleItem) {
    if (this.srsNameStyle == null) {
      this.srsNameStyle = new ArrayList<>();
    }
    this.srsNameStyle.add(srsNameStyleItem);
    return this;
  }

   /**
   * Get srsNameStyle
   * @return srsNameStyle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SRS_NAME_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SrsNameStyle> getSrsNameStyle() {
    return srsNameStyle;
  }


  public void setSrsNameStyle(List<SrsNameStyle> srsNameStyle) {
    this.srsNameStyle = srsNameStyle;
  }


  public GmlSettings overrideGMLAttributes(Boolean overrideGMLAttributes) {
    
    this.overrideGMLAttributes = overrideGMLAttributes;
    return this;
  }

   /**
   * Controls how attributes are handled with regard to attributes defined in the schema of AbstractFeatureType, name, description, etc... When set this flag will cause the attributes to be redefined in the application schema namespace.
   * @return overrideGMLAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls how attributes are handled with regard to attributes defined in the schema of AbstractFeatureType, name, description, etc... When set this flag will cause the attributes to be redefined in the application schema namespace.")
  @JsonProperty(JSON_PROPERTY_OVERRIDE_G_M_L_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOverrideGMLAttributes() {
    return overrideGMLAttributes;
  }


  public void setOverrideGMLAttributes(Boolean overrideGMLAttributes) {
    this.overrideGMLAttributes = overrideGMLAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GmlSettings gmlSettings = (GmlSettings) o;
    return Objects.equals(this.srsNameStyle, gmlSettings.srsNameStyle) &&
        Objects.equals(this.overrideGMLAttributes, gmlSettings.overrideGMLAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(srsNameStyle, overrideGMLAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GmlSettings {\n");
    sb.append("    srsNameStyle: ").append(toIndentedString(srsNameStyle)).append("\n");
    sb.append("    overrideGMLAttributes: ").append(toIndentedString(overrideGMLAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

