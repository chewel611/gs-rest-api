/*
 * GeoServer Catalog Model
 * GeoServer Catalog Model Objects
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.model.catalog;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.geoserver.openapi.model.catalog.CoverageDimensionInfo;
import org.geoserver.openapi.model.catalog.CoverageStoreInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * CoverageInfoAllOf
 */
@JsonPropertyOrder({
  CoverageInfoAllOf.JSON_PROPERTY_STORE,
  CoverageInfoAllOf.JSON_PROPERTY_NATIVE_COVERAGE_NAME,
  CoverageInfoAllOf.JSON_PROPERTY_NATIVE_FORMAT,
  CoverageInfoAllOf.JSON_PROPERTY_SUPPORTED_FORMATS,
  CoverageInfoAllOf.JSON_PROPERTY_REQUEST_S_R_S,
  CoverageInfoAllOf.JSON_PROPERTY_RESPONSE_S_R_S,
  CoverageInfoAllOf.JSON_PROPERTY_DEFAULT_INTERPOLATION_METHOD,
  CoverageInfoAllOf.JSON_PROPERTY_INTERPOLATION_METHODS,
  CoverageInfoAllOf.JSON_PROPERTY_PARAMETERS,
  CoverageInfoAllOf.JSON_PROPERTY_DIMENSIONS
})

public class CoverageInfoAllOf {
  public static final String JSON_PROPERTY_STORE = "store";
  private CoverageStoreInfo store;

  public static final String JSON_PROPERTY_NATIVE_COVERAGE_NAME = "nativeCoverageName";
  private String nativeCoverageName;

  public static final String JSON_PROPERTY_NATIVE_FORMAT = "nativeFormat";
  private String nativeFormat;

  public static final String JSON_PROPERTY_SUPPORTED_FORMATS = "supportedFormats";
  private List<String> supportedFormats = null;

  public static final String JSON_PROPERTY_REQUEST_S_R_S = "requestSRS";
  private List<String> requestSRS = null;

  public static final String JSON_PROPERTY_RESPONSE_S_R_S = "responseSRS";
  private List<String> responseSRS = null;

  public static final String JSON_PROPERTY_DEFAULT_INTERPOLATION_METHOD = "defaultInterpolationMethod";
  private String defaultInterpolationMethod;

  public static final String JSON_PROPERTY_INTERPOLATION_METHODS = "interpolationMethods";
  private List<String> interpolationMethods = null;

  public static final String JSON_PROPERTY_PARAMETERS = "parameters";
  private Map<String, Object> parameters = null;

  public static final String JSON_PROPERTY_DIMENSIONS = "dimensions";
  private List<CoverageDimensionInfo> dimensions = null;


  public CoverageInfoAllOf store(CoverageStoreInfo store) {
    
    this.store = store;
    return this;
  }

   /**
   * Get store
   * @return store
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CoverageStoreInfo getStore() {
    return store;
  }


  public void setStore(CoverageStoreInfo store) {
    this.store = store;
  }


  public CoverageInfoAllOf nativeCoverageName(String nativeCoverageName) {
    
    this.nativeCoverageName = nativeCoverageName;
    return this;
  }

   /**
   * the native coverage name (used to pick up a specific coverage from within a reader)
   * @return nativeCoverageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the native coverage name (used to pick up a specific coverage from within a reader)")
  @JsonProperty(JSON_PROPERTY_NATIVE_COVERAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNativeCoverageName() {
    return nativeCoverageName;
  }


  public void setNativeCoverageName(String nativeCoverageName) {
    this.nativeCoverageName = nativeCoverageName;
  }


  public CoverageInfoAllOf nativeFormat(String nativeFormat) {
    
    this.nativeFormat = nativeFormat;
    return this;
  }

   /**
   * The native format name of the coverage
   * @return nativeFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The native format name of the coverage")
  @JsonProperty(JSON_PROPERTY_NATIVE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNativeFormat() {
    return nativeFormat;
  }


  public void setNativeFormat(String nativeFormat) {
    this.nativeFormat = nativeFormat;
  }


  public CoverageInfoAllOf supportedFormats(List<String> supportedFormats) {
    
    this.supportedFormats = supportedFormats;
    return this;
  }

  public CoverageInfoAllOf addSupportedFormatsItem(String supportedFormatsItem) {
    if (this.supportedFormats == null) {
      this.supportedFormats = new ArrayList<>();
    }
    this.supportedFormats.add(supportedFormatsItem);
    return this;
  }

   /**
   * The supported formats for the coverage
   * @return supportedFormats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The supported formats for the coverage")
  @JsonProperty(JSON_PROPERTY_SUPPORTED_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSupportedFormats() {
    return supportedFormats;
  }


  public void setSupportedFormats(List<String> supportedFormats) {
    this.supportedFormats = supportedFormats;
  }


  public CoverageInfoAllOf requestSRS(List<String> requestSRS) {
    
    this.requestSRS = requestSRS;
    return this;
  }

  public CoverageInfoAllOf addRequestSRSItem(String requestSRSItem) {
    if (this.requestSRS == null) {
      this.requestSRS = new ArrayList<>();
    }
    this.requestSRS.add(requestSRSItem);
    return this;
  }

   /**
   * The collection of identifiers of the crs&#39;s the coverage supports in a request.
   * @return requestSRS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The collection of identifiers of the crs's the coverage supports in a request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_S_R_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRequestSRS() {
    return requestSRS;
  }


  public void setRequestSRS(List<String> requestSRS) {
    this.requestSRS = requestSRS;
  }


  public CoverageInfoAllOf responseSRS(List<String> responseSRS) {
    
    this.responseSRS = responseSRS;
    return this;
  }

  public CoverageInfoAllOf addResponseSRSItem(String responseSRSItem) {
    if (this.responseSRS == null) {
      this.responseSRS = new ArrayList<>();
    }
    this.responseSRS.add(responseSRSItem);
    return this;
  }

   /**
   * The collection of identifiers of the crs&#39;s the coverage supports in a response.
   * @return responseSRS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The collection of identifiers of the crs's the coverage supports in a response.")
  @JsonProperty(JSON_PROPERTY_RESPONSE_S_R_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getResponseSRS() {
    return responseSRS;
  }


  public void setResponseSRS(List<String> responseSRS) {
    this.responseSRS = responseSRS;
  }


  public CoverageInfoAllOf defaultInterpolationMethod(String defaultInterpolationMethod) {
    
    this.defaultInterpolationMethod = defaultInterpolationMethod;
    return this;
  }

   /**
   * Default resampling (interpolation) method that will be used for this coverage.
   * @return defaultInterpolationMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default resampling (interpolation) method that will be used for this coverage.")
  @JsonProperty(JSON_PROPERTY_DEFAULT_INTERPOLATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultInterpolationMethod() {
    return defaultInterpolationMethod;
  }


  public void setDefaultInterpolationMethod(String defaultInterpolationMethod) {
    this.defaultInterpolationMethod = defaultInterpolationMethod;
  }


  public CoverageInfoAllOf interpolationMethods(List<String> interpolationMethods) {
    
    this.interpolationMethods = interpolationMethods;
    return this;
  }

  public CoverageInfoAllOf addInterpolationMethodsItem(String interpolationMethodsItem) {
    if (this.interpolationMethods == null) {
      this.interpolationMethods = new ArrayList<>();
    }
    this.interpolationMethods.add(interpolationMethodsItem);
    return this;
  }

   /**
   * available interporlations methods for this coverage
   * @return interpolationMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "available interporlations methods for this coverage")
  @JsonProperty(JSON_PROPERTY_INTERPOLATION_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getInterpolationMethods() {
    return interpolationMethods;
  }


  public void setInterpolationMethods(List<String> interpolationMethods) {
    this.interpolationMethods = interpolationMethods;
  }


  public CoverageInfoAllOf parameters(Map<String, Object> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public CoverageInfoAllOf putParametersItem(String key, Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getParameters() {
    return parameters;
  }


  public void setParameters(Map<String, Object> parameters) {
    this.parameters = parameters;
  }


  public CoverageInfoAllOf dimensions(List<CoverageDimensionInfo> dimensions) {
    
    this.dimensions = dimensions;
    return this;
  }

  public CoverageInfoAllOf addDimensionsItem(CoverageDimensionInfo dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

   /**
   * raster dimensions
   * @return dimensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "raster dimensions")
  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CoverageDimensionInfo> getDimensions() {
    return dimensions;
  }


  public void setDimensions(List<CoverageDimensionInfo> dimensions) {
    this.dimensions = dimensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoverageInfoAllOf coverageInfoAllOf = (CoverageInfoAllOf) o;
    return Objects.equals(this.store, coverageInfoAllOf.store) &&
        Objects.equals(this.nativeCoverageName, coverageInfoAllOf.nativeCoverageName) &&
        Objects.equals(this.nativeFormat, coverageInfoAllOf.nativeFormat) &&
        Objects.equals(this.supportedFormats, coverageInfoAllOf.supportedFormats) &&
        Objects.equals(this.requestSRS, coverageInfoAllOf.requestSRS) &&
        Objects.equals(this.responseSRS, coverageInfoAllOf.responseSRS) &&
        Objects.equals(this.defaultInterpolationMethod, coverageInfoAllOf.defaultInterpolationMethod) &&
        Objects.equals(this.interpolationMethods, coverageInfoAllOf.interpolationMethods) &&
        Objects.equals(this.parameters, coverageInfoAllOf.parameters) &&
        Objects.equals(this.dimensions, coverageInfoAllOf.dimensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(store, nativeCoverageName, nativeFormat, supportedFormats, requestSRS, responseSRS, defaultInterpolationMethod, interpolationMethods, parameters, dimensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoverageInfoAllOf {\n");
    sb.append("    store: ").append(toIndentedString(store)).append("\n");
    sb.append("    nativeCoverageName: ").append(toIndentedString(nativeCoverageName)).append("\n");
    sb.append("    nativeFormat: ").append(toIndentedString(nativeFormat)).append("\n");
    sb.append("    supportedFormats: ").append(toIndentedString(supportedFormats)).append("\n");
    sb.append("    requestSRS: ").append(toIndentedString(requestSRS)).append("\n");
    sb.append("    responseSRS: ").append(toIndentedString(responseSRS)).append("\n");
    sb.append("    defaultInterpolationMethod: ").append(toIndentedString(defaultInterpolationMethod)).append("\n");
    sb.append("    interpolationMethods: ").append(toIndentedString(interpolationMethods)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

