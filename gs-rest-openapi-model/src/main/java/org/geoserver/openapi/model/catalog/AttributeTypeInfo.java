/*
 * GeoServer Catalog Model
 * GeoServer Catalog Model Objects
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.model.catalog;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * An attribute exposed by a FeatureTypeInfo.
 */
@ApiModel(description = "An attribute exposed by a FeatureTypeInfo.")
@JsonPropertyOrder({
  AttributeTypeInfo.JSON_PROPERTY_NAME,
  AttributeTypeInfo.JSON_PROPERTY_MIN_OCCURS,
  AttributeTypeInfo.JSON_PROPERTY_MAX_OCCURS,
  AttributeTypeInfo.JSON_PROPERTY_NILLABLE,
  AttributeTypeInfo.JSON_PROPERTY_BINDING,
  AttributeTypeInfo.JSON_PROPERTY_LENGTH
})

public class AttributeTypeInfo {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MIN_OCCURS = "minOccurs";
  private Integer minOccurs;

  public static final String JSON_PROPERTY_MAX_OCCURS = "maxOccurs";
  private Integer maxOccurs;

  public static final String JSON_PROPERTY_NILLABLE = "nillable";
  private Boolean nillable;

  public static final String JSON_PROPERTY_BINDING = "binding";
  private String binding;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private Integer length;


  public AttributeTypeInfo name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the attribute.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the attribute.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AttributeTypeInfo minOccurs(Integer minOccurs) {
    
    this.minOccurs = minOccurs;
    return this;
  }

   /**
   * Minimum number of occurrences of the attribute.
   * @return minOccurs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum number of occurrences of the attribute.")
  @JsonProperty(JSON_PROPERTY_MIN_OCCURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinOccurs() {
    return minOccurs;
  }


  public void setMinOccurs(Integer minOccurs) {
    this.minOccurs = minOccurs;
  }


  public AttributeTypeInfo maxOccurs(Integer maxOccurs) {
    
    this.maxOccurs = maxOccurs;
    return this;
  }

   /**
   * Maximum number of occurrences of the attribute.
   * @return maxOccurs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of occurrences of the attribute.")
  @JsonProperty(JSON_PROPERTY_MAX_OCCURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxOccurs() {
    return maxOccurs;
  }


  public void setMaxOccurs(Integer maxOccurs) {
    this.maxOccurs = maxOccurs;
  }


  public AttributeTypeInfo nillable(Boolean nillable) {
    
    this.nillable = nillable;
    return this;
  }

   /**
   * Flag indicating if null is an acceptable value for the attribute.
   * @return nillable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating if null is an acceptable value for the attribute.")
  @JsonProperty(JSON_PROPERTY_NILLABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNillable() {
    return nillable;
  }


  public void setNillable(Boolean nillable) {
    this.nillable = nillable;
  }


  public AttributeTypeInfo binding(String binding) {
    
    this.binding = binding;
    return this;
  }

   /**
   * The java class that values of this attribute are bound to.
   * @return binding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The java class that values of this attribute are bound to.")
  @JsonProperty(JSON_PROPERTY_BINDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBinding() {
    return binding;
  }


  public void setBinding(String binding) {
    this.binding = binding;
  }


  public AttributeTypeInfo length(Integer length) {
    
    this.length = length;
    return this;
  }

   /**
   * Returns the length of this attribute. It&#39;s usually non null only for string and numeric types
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns the length of this attribute. It's usually non null only for string and numeric types")
  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLength() {
    return length;
  }


  public void setLength(Integer length) {
    this.length = length;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttributeTypeInfo attributeTypeInfo = (AttributeTypeInfo) o;
    return Objects.equals(this.name, attributeTypeInfo.name) &&
        Objects.equals(this.minOccurs, attributeTypeInfo.minOccurs) &&
        Objects.equals(this.maxOccurs, attributeTypeInfo.maxOccurs) &&
        Objects.equals(this.nillable, attributeTypeInfo.nillable) &&
        Objects.equals(this.binding, attributeTypeInfo.binding) &&
        Objects.equals(this.length, attributeTypeInfo.length);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, minOccurs, maxOccurs, nillable, binding, length);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttributeTypeInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    minOccurs: ").append(toIndentedString(minOccurs)).append("\n");
    sb.append("    maxOccurs: ").append(toIndentedString(maxOccurs)).append("\n");
    sb.append("    nillable: ").append(toIndentedString(nillable)).append("\n");
    sb.append("    binding: ").append(toIndentedString(binding)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

