/*
 * GeoServer Catalog Model
 * GeoServer Catalog Model Objects
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.geoserver.openapi.model.catalog;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The namespace URI of the resource. Example would be an application schema namespace URI.
 */
@ApiModel(description = "The namespace URI of the resource. Example would be an application schema namespace URI.")
@JsonPropertyOrder({
  KeywordInfo.JSON_PROPERTY_VALUE,
  KeywordInfo.JSON_PROPERTY_LANGUAGE,
  KeywordInfo.JSON_PROPERTY_VOCABULARY
})

public class KeywordInfo {
  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private String language;

  public static final String JSON_PROPERTY_VOCABULARY = "vocabulary";
  private String vocabulary;


  public KeywordInfo value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The keyword value.
   * @return value
  **/
  @ApiModelProperty(required = true, value = "The keyword value.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public KeywordInfo language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * The language of the keyword, null if no language.
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The language of the keyword, null if no language.")
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public KeywordInfo vocabulary(String vocabulary) {
    
    this.vocabulary = vocabulary;
    return this;
  }

   /**
   * The vocabulary of the keyword, null if no vocabulary.
   * @return vocabulary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The vocabulary of the keyword, null if no vocabulary.")
  @JsonProperty(JSON_PROPERTY_VOCABULARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVocabulary() {
    return vocabulary;
  }


  public void setVocabulary(String vocabulary) {
    this.vocabulary = vocabulary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeywordInfo keywordInfo = (KeywordInfo) o;
    return Objects.equals(this.value, keywordInfo.value) &&
        Objects.equals(this.language, keywordInfo.language) &&
        Objects.equals(this.vocabulary, keywordInfo.vocabulary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, language, vocabulary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeywordInfo {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    vocabulary: ").append(toIndentedString(vocabulary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

